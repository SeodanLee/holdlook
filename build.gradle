//
//// For those who want the bleeding edge
//buildscript {
//    repositories {
//        jcenter()
//        maven {
//            name = "forge"
//            url = "http://files.minecraftforge.net/maven"
//        }
//    }
//    dependencies {
//        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
//    }
//}
//apply plugin: 'net.minecraftforge.gradle.forge'
//
///*
//// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
//plugins {
//    id "net.minecraftforge.gradle.forge" version "2.0.2"
//}
//*/
//version = "1.2"
//group= "cats" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
//archivesBaseName = "Holdlook"
//
//minecraft {
//    version = "1.8.9-11.15.1.2318-1.8.9"
//    runDir = "run"
//
//    // the mappings can be changed at any time, and must be in the following format.
//    // snapshot_YYYYMMDD   snapshot are built nightly.
//    // stable_#            stables are built at the discretion of the MCP team.
//    // Use non-default mappings at your own risk. they may not allways work.
//    // simply re-run your setup task after changing the mappings to update your workspace.
//    mappings = "stable_20"
//    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
//}
//
//dependencies {
//    // you may put jars on which you depend on in ./libs
//    // or you may define them like so..
//    //compile "some.group:artifact:version:classifier"
//    //compile "some.group:artifact:version"
//
//    // real examples
//    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
//    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env
//
//    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
//    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
//
//    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
//    // except that these dependencies get remapped to your current MCP mappings
//    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
//    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
//
//    // for more info...
//    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
//    // http://www.gradle.org/docs/current/userguide/dependency_management.html
//
//}
//
//processResources
//{
//    // this will ensure that this task is redone when the versions change.
//    inputs.property "version", project.version
//    inputs.property "mcversion", project.minecraft.version
//
//    // replace stuff in mcmod.info, nothing else
//    from(sourceSets.main.resources.srcDirs) {
//        include 'mcmod.info'
//
//        // replace version and mcversion
//        expand 'version':project.version, 'mcversion':project.minecraft.version
//    }
//
//    // copy everything else, thats not the mcmod.info
//    from(sourceSets.main.resources.srcDirs) {
//        exclude 'mcmod.info'
//    }
//}

plugins {
    id 'fabric-loom' version "1.0-SNAPSHOT"
    id 'legacy-looming' version "1.0-SNAPSHOT" // Version must be the same as fabric-loom's
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

//archivesBaseName = project.archives_base_name
//version = project.mod_version
//group = project.maven_group

version = "1.2"
group= "cats" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Holdlook"

repositories {
    // Fixed LWJGL on Linux
    maven {
        name = 'Babric'
        url = 'https://maven.glass-launcher.net/babric'
    }
}
//dependencies {
//    minecraft "com.mojang:minecraft:1.8.9"
//    mappings "net.legacyfabric:yarn:1.8.9+build.458:v2"
//    modImplementation "net.fabricmc:fabric-loader:0.14.13"
//
//    // Legacy-Fabric API
//    modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:1.7.0+1.8.9"
//}
loom {
    setIntermediaryUrl('https://repo.legacyfabric.net/repository/legacyfabric/net/legacyfabric/intermediary/%1$s/intermediary-%1$s-v2.jar');

    // Only needed for versions not available from vanilla launcher by default.
    // customMinecraftManifest.set("https://meta.legacyfabric.net/v2/manifest/${minecraft_version}")

    // Required by 1.7.x
    // runs {
    // 	client {
    // 		programArgs "--userProperties", "{}"
    // 	}
    // }
}

def lwjgl2 = !project.minecraft_version.startsWith("1.13")
def currentOs = System.getProperty("os.name").toLowerCase(Locale.ENGLISH)

dependencies {
//    minecraft "com.mojang:minecraft:${project.minecraft_version}"
//    mappings "net.legacyfabric:yarn:${project.yarn_mappings}:v2"
//    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    minecraft "com.mojang:minecraft:1.8.9"
    mappings "net.legacyfabric:yarn:1.8.9+build.458:v2"
    modImplementation "net.fabricmc:fabric-loader:0.14.13"

    // Fabric API provides hooks for events, item registration, and more. As most mods will need this, it's included by default.
    // If you know for a fact you don't, it's not required and can be safely removed.
//    modImplementation ("net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}") {
//        exclude module: "legacy-fabric-entity-events-v1"
//    }
    modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:1.7.0+1.8.9"

    // You can retrieve a specific api module using this notation.
    //	modImplementation(legacyFabricApi.module("legacy-fabric-item-groups-v1", project.fabric_version))

    if (lwjgl2) {
        if (currentOs.contains("mac")) {
            implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209'
            implementation 'org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209'
            implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
        } else if (currentOs.contains("linux")) {
            implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-babric.1'
            implementation 'org.lwjgl.lwjgl:lwjgl:2.9.4-babric.1'
            implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-babric.1'
        }
    }
}

if (lwjgl2) {
    if (currentOs.contains("mac")) {
        configurations.all {
            resolutionStrategy {
                dependencySubstitution {
                    substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')
                    substitute module('org.lwjgl.lwjgl:lwjgl:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209')
                }
                force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
            }
        }
    } else if (currentOs.contains("linux")) {
        configurations.all {
            resolutionStrategy {
                dependencySubstitution {
                    substitute(module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')) using module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-babric.1')
                    substitute module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209') using module('org.lwjgl.lwjgl:lwjgl:2.9.4-babric.1')
                }
                force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-babric.1'
            }
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) it.options.release = 8
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}